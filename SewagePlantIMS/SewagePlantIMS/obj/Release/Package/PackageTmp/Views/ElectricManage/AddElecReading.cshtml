@model SewagePlantIMS.ViewModels.ElectricReading
@{
    ViewBag.Title = "新增电力抄表信息";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #temp {
        width: 100px;
    }
</style>
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<fieldset>
    <legend>新增电力抄表信息</legend>
</fieldset>

<ul id="myTab" class="nav nav-tabs">
    <li class="active">
        <a href="#home" data-toggle="tab" id="ksxc_tag">
            开始巡查
        </a>
    </li>
    <li>
        <a href="#db1x" data-toggle="tab" id="db1x_tag">
            电表1#线
        </a>
    </li>
    <li>
        <a href="#db2x" data-toggle="tab" id="db2x_tag">
            电表2#线
        </a>
    </li>
    <li>
        <a href="#gy1x" data-toggle="tab" id="gy1x_tag">
            高压1#线
        </a>
    </li>
    <li>
        <a href="#gy2x" data-toggle="tab" id="gy2x_tag">
            高压2#线
        </a>
    </li>
    <li>
        <a href="#dyml" data-toggle="tab" id="dyml_tag">
            低压母联
        </a>
    </li>
    <li>
        <a href="#dy1x" data-toggle="tab" id="dy1x_tag">
            低压1#线
        </a>
    </li>
    <li>
        <a href="#dy2x" data-toggle="tab" id="dy2x_tag">
            低压2#线
        </a>
    </li>
    <li>
        <a href="#qtjc" data-toggle="tab" id="qtjc_tag">
            其他检查
        </a>
    </li>
</ul>

<div id="myTabContent" class="tab-content" style="border-right-style:none;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-width:1px;border-color:#dddddd;padding: 50px;">
    <div class="tab-pane fade in active" id="home">
        @using (Ajax.BeginForm("BeginElecReading", "ElectricManage", new AjaxOptions
        {
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
        }))
        {
            <div class="am-form-group">
                <label>巡查时间：</label>
                <input size="22" type="datetime" value="" readonly class="form_datetime form-control" name="aer_check_time" id="date_info">
            </div>
            <div class="am-form-group">
                <label>巡查问题备注：</label>
                <textarea class="form-control" rows="4" name="aer_remark" placeholder="请简述巡查过程中出现的问题"></textarea>
            </div>
            <button type="submit" class="btn btn-primary btn-block" id="begincheck" onclick="check_begin()">开始巡查</button>
        }
        <button class="btn btn-default btn-block" onclick="javascrtpt:window.location.href='ElecReadingList'">返回</button>
    </div>

    <div class="tab-pane fade" id="db1x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_db1x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">正向有功(kwh)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_active_all, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_active_all, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_active_all, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_active_sharp, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_active_sharp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_active_sharp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_active_peak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_active_peak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_active_peak, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_active_shoulder, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_active_shoulder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_active_shoulder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_active_offpeak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_active_offpeak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_active_offpeak, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">正向无功(kvarh)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_reactive_all, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_reactive_all, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_reactive_all, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_reactive_sharp, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_reactive_sharp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_reactive_sharp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_reactive_peak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_reactive_peak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_reactive_peak, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr1_postive_reactive_shoulder, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr1_postive_reactive_shoulder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr1_postive_reactive_shoulder, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emr1_postive_reactive_offpeak, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.emr1_postive_reactive_offpeak, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emr1_postive_reactive_offpeak, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <h5 style="color:#5b9bd1;text-align:center;">功率因素(%)</h5>
                    <div class="form-group">
                        @Html.LabelFor(model => model.emr1_pf_all, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.emr1_pf_all, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emr1_pf_all, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emr1_pf_a, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.emr1_pf_a, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emr1_pf_a, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emr1_pf_b, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.emr1_pf_b, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emr1_pf_b, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emr1_pf_c, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.emr1_pf_c, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emr1_pf_c, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary" id="db1x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()" >提交</button>
            }

        </div>
    </div>
    <div class="tab-pane fade" id="db2x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_db2x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">正向有功(kwh)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_active_all, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_active_all, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_active_all, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_active_sharp, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_active_sharp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_active_sharp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_active_peak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_active_peak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_active_peak, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_active_shoulder, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_active_shoulder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_active_shoulder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_active_offpeak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_active_offpeak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_active_offpeak, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">正向无功(kvarh)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_reactive_all, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_reactive_all, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_reactive_all, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_reactive_sharp, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_reactive_sharp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_reactive_sharp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_reactive_peak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_reactive_peak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_reactive_peak, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_reactive_shoulder, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_reactive_shoulder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_reactive_shoulder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_postive_reactive_offpeak, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_postive_reactive_offpeak, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_postive_reactive_offpeak, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">功率因素(%)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_pf_all, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_pf_all, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_pf_all, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_pf_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_pf_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_pf_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_pf_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_pf_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_pf_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emr2_pf_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.emr2_pf_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emr2_pf_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="db2x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>

    </div>
    <div class="tab-pane fade" id="gy1x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_gy1x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">电压(V)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_v_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_v_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_v_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_v_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_v_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_v_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_v_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_v_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_v_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">电流(A)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_e_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_e_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_e_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_e_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_e_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_e_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_e_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_e_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_e_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">变压器温度(℃)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_transformer_temp_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_transformer_temp_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_transformer_temp_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_transformer_temp_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_transformer_temp_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_transformer_temp_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd1_transformer_temp_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd1_transformer_temp_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd1_transformer_temp_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="gy1x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
    <div class="tab-pane fade" id="gy2x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_gy2x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">电压(V)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_v_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_v_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_v_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_v_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_v_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_v_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_v_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_v_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_v_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">电流(A)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_e_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_e_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_e_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_e_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_e_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_e_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_e_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_e_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_e_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">变压器温度(℃)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_transformer_temp_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_transformer_temp_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_transformer_temp_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_transformer_temp_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_transformer_temp_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_transformer_temp_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ehvd2_transformer_temp_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.ehvd2_transformer_temp_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ehvd2_transformer_temp_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="gy2x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
    <div class="tab-pane fade" id="dyml">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_dyml", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">电压(V)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_v_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_v_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_v_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_v_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_v_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_v_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_v_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_v_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_v_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">电流(A)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_e_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_e_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_e_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_e_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_e_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_e_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvs_e_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvs_e_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvs_e_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="dyml_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
    <div class="tab-pane fade" id="dy1x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_dy1x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">电压(V)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_v_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_v_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_v_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_v_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_v_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_v_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_v_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_v_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_v_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">电流(A)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_e_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_e_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_e_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_e_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_e_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_e_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_e_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_e_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_e_c, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_pf, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd1_pf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd1_pf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="dy1x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
    <div class="tab-pane fade" id="dy2x">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_dy2x", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
                <h5 style="color:#5b9bd1;text-align:center;">电压(V)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_v_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_v_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_v_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_v_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_v_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_v_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_v_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_v_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_v_c, "", new { @class = "text-danger" })
                    </div>
                </div>
                <h5 style="color:#5b9bd1;text-align:center;">电流(A)</h5>
                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_e_a, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_e_a, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_e_a, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_e_b, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_e_b, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_e_b, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd1_e_c, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_e_c, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_e_c, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.elvd2_pf, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.elvd2_pf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.elvd2_pf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="dy2x_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
    <div class="tab-pane fade" id="qtjc">
        <div class="form-horizontal">

            @using (Ajax.BeginForm("Insert_qtjc", "ElectricManage", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,

            }))
            {
               <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.direct_current_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.direct_current_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.direct_current_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.control_room_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.control_room_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.control_room_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.distributor_door_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.distributor_door_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.distributor_door_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.electric_room_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.electric_room_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.electric_room_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.light_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.light_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.light_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.wash_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.wash_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.wash_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fire_epuip_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.fire_epuip_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.fire_epuip_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.safe_appliance_state, htmlAttributes: new { @class = "control-label", @id = "temp" })
                    @Html.RadioButtonFor(model => model.safe_appliance_state, 1, new { @checked = "checked" })正常
                    @Html.RadioButtonFor(model => model.safe_appliance_state, 0, new { })异常
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.mark, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.mark, new { htmlAttributes = new { @class = "form-control", @placeholder = "请输入其他需要补充的信息"} })
                    @Html.ValidationMessageFor(model => model.mark, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-primary" id="qtjc_button" name="pre_id" style="display:block;margin:0 auto" onclick="btn_click_pre()">提交</button>
            }
        </div>
    </div>
</div>
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

<script type="text/javascript">
    var ii = 0;
    $.fn.datetimepicker.dates['zh'] = {
        days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
        daysShort: ["日", "一", "二", "三", "四", "五", "六", "日"],
        daysMin: ["日", "一", "二", "三", "四", "五", "六", "日"],
        months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
        monthsShort: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"],
        meridiem: ["上午", "下午"],
        //suffix:      ["st", "nd", "rd", "th"],  
        today: "今天"
    };
    $(".form_datetime").datetimepicker({ format: 'yyyy-mm-dd hh:ii', language: 'zh' });

    var begincheck = document.getElementById("begincheck");
    begincheck.onclick = function check_begin() {
        if (document.getElementById("date_info").value == "") {
            alert("亲，您还未选择巡查时间呢!!!");
            return false;
        }
        else {
            if (ii != 0) {
                alert("亲，您已经添加过一次了~");
                return false;
            }
            ii = ii + 1;
        }        
    }
    
    function btn_click_pre() {             
        var btn = $("button[name^='pre_id']");
        for (var i = 0; i < btn.length; i++) {
            if (btn[i].value == '') {
                alert("还未添加新的巡查信息哦！！！");
                return false;
            }
            else {
                break;
            }

        }
    }
    function GetPreId(pre_id) {
        var btn = $("button[name^='pre_id']");
        for (var i = 0; i < btn.length; i++) {
            btn[i].value = pre_id;
        }
    }
    function jump_to_db1x() {      
        document.getElementById("db1x_tag").click();
    }
    function jump_to_db2x() {
        document.getElementById("db2x_tag").click();
    }
    function jump_to_gy1x() {
        document.getElementById("gy1x_tag").click();
    }
    function jump_to_gy2x() {
        document.getElementById("gy2x_tag").click();
    }
    function jump_to_dyml() {
        document.getElementById("dyml_tag").click();
    }
    function jump_to_dy1x() {
        document.getElementById("dy1x_tag").click();
    }
    function jump_to_dy2x() {
        document.getElementById("dy2x_tag").click();
    }
    function jump_to_qtjc() {
        document.getElementById("qtjc_tag").click();
    }
</script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>